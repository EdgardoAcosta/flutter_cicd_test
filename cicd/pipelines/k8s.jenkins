#!/usr/bin/env groovy

def nodeLabel = "jenkins-slave-${UUID.randomUUID().toString()}"
pipeline {

  environment {
    POD_NAME = "jenkins-slave-${UUID.randomUUID().toString()}"
    SLACK_USER_ID = slackUserIdFromEmail "${ghprbActualCommitAuthorEmail}"
    SLACK_THREAD = ""
  }
  agent {
    kubernetes {
      inheritFrom nodeLabel
      defaultContainer 'jnlp'
      yaml """
        apiVersion: v1
        kind: Pod
        metadata:
        labels:
          app: pipeline-job
        spec:
          containers:
          - name: flutter
            image: 337583525037.dkr.ecr.us-west-2.amazonaws.com/docker-flutter:latest
            command:
            - cat
            tty: true
      """
    }
  }
  stages {
    stage('Install Dependencies') {
        steps{
          slackSend message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} for PR ${ghprbPullLink} by ${ghprbPullAuthorLoginMention}"
          container('flutter'){
            sh 'export PATH="$PATH":"$HOME/.pub-cache/bin"'
            sh 'flutter doctor'
            sh 'flutter --version'
            sh 'dart pub global activate junitreport'
            sh 'flutter pub get'
          }
        }
    }
    stage('Test') {
      steps{
         container('flutter'){
            sh 'flutter test --reporter json > test_result.jsonl'
            sh 'dart pub global run junitreport:tojunit --input test_result.jsonl --output test-results.xml'
            junit 'test-results.xml'
          }
      }
    }
    stage('BUILD') {
      steps{
         container('flutter'){
            sh 'flutter build apk --flavor google'
          }
      }
    }
    stage('UPLOAD') {
      steps{
         container('flutter'){
            sh 'aws s3api list-buckets --query "Buckets[].Name"'
          }
      }
    }
  }  
  post {
    failure {
      slackSend  message: "Job Faile for PR ${ghprbPullLink} by ${ghprbPullAuthorLoginMention}", color: 'danger'

    }
    success {
      slackSend iconEmoji: "thumbsup", message: "Build finished successfully - ${env.JOB_NAME} ${env.BUILD_NUMBER} for PR ${ghprbPullLink} by ${ghprbPullAuthorLoginMention}", color: 'good'
    }
    unstable {
      slackSend  message: "Unstable buidl - ${env.JOB_NAME}", color: 'danger'
    }
  }
    
}